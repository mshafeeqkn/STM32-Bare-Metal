ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.uart1_send_byte,"ax",%progbits
  19              		.align	1
  20              		.global	uart1_send_byte
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	uart1_send_byte:
  26              	.LFB68:
   1:Core/Src/main.c **** 
   2:Core/Src/main.c **** /* USER CODE BEGIN Header */
   3:Core/Src/main.c **** /**
   4:Core/Src/main.c ****   ******************************************************************************
   5:Core/Src/main.c ****   * @file           : main.c
   6:Core/Src/main.c ****   * @brief          : Main program body
   7:Core/Src/main.c ****   ******************************************************************************
   8:Core/Src/main.c ****   * @attention
   9:Core/Src/main.c ****   *
  10:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  11:Core/Src/main.c ****   * All rights reserved.
  12:Core/Src/main.c ****   *
  13:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  14:Core/Src/main.c ****   * in the root directory of this software component.
  15:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  16:Core/Src/main.c ****   *
  17:Core/Src/main.c ****   ******************************************************************************
  18:Core/Src/main.c ****   */
  19:Core/Src/main.c **** /* USER CODE END Header */
  20:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/main.c **** #include "main.h"
  22:Core/Src/main.c **** #include <string.h>
  23:Core/Src/main.c **** #include <stdarg.h>
  24:Core/Src/main.c **** #include <stdio.h>
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** #define TURN_ON_LED()            turn_led_on(TURN_ON)
  28:Core/Src/main.c **** #define TURN_OFF_LED()           turn_led_on(TURN_OFF)
  29:Core/Src/main.c **** #define TOGGLE_LED()             turn_led_on(TURN_TOGGLE)
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** #define UART_TX_ENABLE           0x01
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 2


  33:Core/Src/main.c **** #define UART_RX_ENABLE           0x02
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** typedef enum {
  36:Core/Src/main.c ****     TURN_OFF,
  37:Core/Src/main.c ****     TURN_ON,
  38:Core/Src/main.c ****     TURN_TOGGLE
  39:Core/Src/main.c **** } LedState_t;
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /**
  42:Core/Src/main.c ****  * @brief Send a byte through the UART1
  43:Core/Src/main.c ****  *
  44:Core/Src/main.c ****  * @param byte to be sent
  45:Core/Src/main.c ****  */
  46:Core/Src/main.c **** void uart1_send_byte(uint8_t ch) {
  27              		.loc 1 46 34 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
  33              	.L2:
  47:Core/Src/main.c ****     while((USART1->SR & USART_SR_TXE) == 0) {}
  34              		.loc 1 47 46 discriminator 1 view .LVU1
  35              		.loc 1 47 39 discriminator 1 view .LVU2
  36              		.loc 1 47 18 is_stmt 0 discriminator 1 view .LVU3
  37 0000 034B     		ldr	r3, .L3
  38 0002 1B68     		ldr	r3, [r3]
  39              		.loc 1 47 39 discriminator 1 view .LVU4
  40 0004 13F0800F 		tst	r3, #128
  41 0008 FAD0     		beq	.L2
  48:Core/Src/main.c ****     USART1->DR = ch;
  42              		.loc 1 48 5 is_stmt 1 view .LVU5
  43              		.loc 1 48 16 is_stmt 0 view .LVU6
  44 000a 014B     		ldr	r3, .L3
  45 000c 5860     		str	r0, [r3, #4]
  49:Core/Src/main.c **** }
  46              		.loc 1 49 1 view .LVU7
  47 000e 7047     		bx	lr
  48              	.L4:
  49              		.align	2
  50              	.L3:
  51 0010 00380140 		.word	1073821696
  52              		.cfi_endproc
  53              	.LFE68:
  55              		.section	.text.uart1_send_string,"ax",%progbits
  56              		.align	1
  57              		.global	uart1_send_string
  58              		.syntax unified
  59              		.thumb
  60              		.thumb_func
  62              	uart1_send_string:
  63              	.LVL1:
  64              	.LFB69:
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /**
  52:Core/Src/main.c ****  * @brief Send formatted string through UART1
  53:Core/Src/main.c ****  *
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 3


  54:Core/Src/main.c ****  * @param format - formatted string
  55:Core/Src/main.c ****  */
  56:Core/Src/main.c **** void uart1_send_string(const char *format, ...) {
  65              		.loc 1 56 49 is_stmt 1 view -0
  66              		.cfi_startproc
  67              		@ args = 4, pretend = 16, frame = 136
  68              		@ frame_needed = 0, uses_anonymous_args = 1
  69              		.loc 1 56 49 is_stmt 0 view .LVU9
  70 0000 0FB4     		push	{r0, r1, r2, r3}
  71              	.LCFI0:
  72              		.cfi_def_cfa_offset 16
  73              		.cfi_offset 0, -16
  74              		.cfi_offset 1, -12
  75              		.cfi_offset 2, -8
  76              		.cfi_offset 3, -4
  77 0002 30B5     		push	{r4, r5, lr}
  78              	.LCFI1:
  79              		.cfi_def_cfa_offset 28
  80              		.cfi_offset 4, -28
  81              		.cfi_offset 5, -24
  82              		.cfi_offset 14, -20
  83 0004 A3B0     		sub	sp, sp, #140
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 168
  86 0006 26AA     		add	r2, sp, #152
  87 0008 52F8041B 		ldr	r1, [r2], #4
  57:Core/Src/main.c ****     va_list args;
  88              		.loc 1 57 5 is_stmt 1 view .LVU10
  58:Core/Src/main.c ****     char buffer[128];
  89              		.loc 1 58 5 view .LVU11
  59:Core/Src/main.c ****     size_t i, len;
  90              		.loc 1 59 5 view .LVU12
  60:Core/Src/main.c **** 
  61:Core/Src/main.c ****     va_start(args, format);
  91              		.loc 1 61 5 view .LVU13
  92 000c 2192     		str	r2, [sp, #132]
  62:Core/Src/main.c ****     vsprintf(buffer, format, args);
  93              		.loc 1 62 5 view .LVU14
  94 000e 01A8     		add	r0, sp, #4
  95 0010 FFF7FEFF 		bl	vsprintf
  96              	.LVL2:
  63:Core/Src/main.c ****     va_end(args);
  97              		.loc 1 63 5 view .LVU15
  64:Core/Src/main.c **** 
  65:Core/Src/main.c ****     len = strlen(buffer);
  98              		.loc 1 65 5 view .LVU16
  99              		.loc 1 65 11 is_stmt 0 view .LVU17
 100 0014 01A8     		add	r0, sp, #4
 101 0016 FFF7FEFF 		bl	strlen
 102              	.LVL3:
 103 001a 0546     		mov	r5, r0
 104              	.LVL4:
  66:Core/Src/main.c ****     for(i = 0; i < len; i++) {
 105              		.loc 1 66 5 is_stmt 1 view .LVU18
 106              		.loc 1 66 11 is_stmt 0 view .LVU19
 107 001c 0024     		movs	r4, #0
 108              		.loc 1 66 5 view .LVU20
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 4


 109 001e 07E0     		b	.L6
 110              	.LVL5:
 111              	.L7:
  67:Core/Src/main.c ****         uart1_send_byte(buffer[i]);
 112              		.loc 1 67 9 is_stmt 1 view .LVU21
 113              		.loc 1 67 31 is_stmt 0 view .LVU22
 114 0020 04F18803 		add	r3, r4, #136
 115 0024 6B44     		add	r3, sp, r3
 116              		.loc 1 67 9 view .LVU23
 117 0026 13F8840C 		ldrb	r0, [r3, #-132]	@ zero_extendqisi2
 118 002a FFF7FEFF 		bl	uart1_send_byte
 119              	.LVL6:
  66:Core/Src/main.c ****     for(i = 0; i < len; i++) {
 120              		.loc 1 66 26 is_stmt 1 discriminator 3 view .LVU24
 121 002e 0134     		adds	r4, r4, #1
 122              	.LVL7:
 123              	.L6:
  66:Core/Src/main.c ****     for(i = 0; i < len; i++) {
 124              		.loc 1 66 18 discriminator 1 view .LVU25
 125 0030 AC42     		cmp	r4, r5
 126 0032 F5D3     		bcc	.L7
 127              	.L8:
  68:Core/Src/main.c ****     }
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****     // Wait until transmission complted
  71:Core/Src/main.c ****     while((USART1->SR & USART_SR_TC) == 0) {}
 128              		.loc 1 71 45 discriminator 1 view .LVU26
 129              		.loc 1 71 38 discriminator 1 view .LVU27
 130              		.loc 1 71 18 is_stmt 0 discriminator 1 view .LVU28
 131 0034 044B     		ldr	r3, .L10
 132 0036 1B68     		ldr	r3, [r3]
 133              		.loc 1 71 38 discriminator 1 view .LVU29
 134 0038 13F0400F 		tst	r3, #64
 135 003c FAD0     		beq	.L8
  72:Core/Src/main.c **** }
 136              		.loc 1 72 1 view .LVU30
 137 003e 23B0     		add	sp, sp, #140
 138              	.LCFI3:
 139              		.cfi_def_cfa_offset 28
 140              		@ sp needed
 141 0040 BDE83040 		pop	{r4, r5, lr}
 142              	.LCFI4:
 143              		.cfi_restore 14
 144              		.cfi_restore 5
 145              		.cfi_restore 4
 146              		.cfi_def_cfa_offset 16
 147              	.LVL8:
 148              		.loc 1 72 1 view .LVU31
 149 0044 04B0     		add	sp, sp, #16
 150              	.LCFI5:
 151              		.cfi_restore 3
 152              		.cfi_restore 2
 153              		.cfi_restore 1
 154              		.cfi_restore 0
 155              		.cfi_def_cfa_offset 0
 156 0046 7047     		bx	lr
 157              	.L11:
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 5


 158              		.align	2
 159              	.L10:
 160 0048 00380140 		.word	1073821696
 161              		.cfi_endproc
 162              	.LFE69:
 164              		.section	.text.uart1_setup,"ax",%progbits
 165              		.align	1
 166              		.global	uart1_setup
 167              		.syntax unified
 168              		.thumb
 169              		.thumb_func
 171              	uart1_setup:
 172              	.LVL9:
 173              	.LFB70:
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** /**
  75:Core/Src/main.c ****  * @brief Setup the UART1 for transmit or recieve
  76:Core/Src/main.c ****  *
  77:Core/Src/main.c ****  * @param uart_mode - UART_TX_ENABLE, UART_RX_ENABLE
  78:Core/Src/main.c ****  *                    or both
  79:Core/Src/main.c ****  */
  80:Core/Src/main.c **** void uart1_setup(uint8_t uart_mode) {
 174              		.loc 1 80 37 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
 178              		@ link register save eliminated.
  81:Core/Src/main.c ****     uint16_t uart1_cr1_flags = 0;
 179              		.loc 1 81 5 view .LVU33
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****     // Enable clock to USART1, Alternate function IO and GPIOA
  84:Core/Src/main.c ****     RCC->APB2ENR |= (RCC_APB2ENR_USART1EN | RCC_APB2ENR_IOPAEN);
 180              		.loc 1 84 5 view .LVU34
 181              		.loc 1 84 8 is_stmt 0 view .LVU35
 182 0000 194A     		ldr	r2, .L17
 183 0002 9369     		ldr	r3, [r2, #24]
 184              		.loc 1 84 18 view .LVU36
 185 0004 43F48043 		orr	r3, r3, #16384
 186 0008 43F00403 		orr	r3, r3, #4
 187 000c 9361     		str	r3, [r2, #24]
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****     // Baud rate 2400 @ 8MHz clock frequency
  87:Core/Src/main.c ****     USART1->BRR = 0xD05;
 188              		.loc 1 87 5 is_stmt 1 view .LVU37
 189              		.loc 1 87 17 is_stmt 0 view .LVU38
 190 000e 174B     		ldr	r3, .L17+4
 191 0010 40F60552 		movw	r2, #3333
 192 0014 9A60     		str	r2, [r3, #8]
  88:Core/Src/main.c ****     if(0 != uart_mode) {
 193              		.loc 1 88 5 is_stmt 1 view .LVU39
 194              		.loc 1 88 7 is_stmt 0 view .LVU40
 195 0016 0246     		mov	r2, r0
 196 0018 00B3     		cbz	r0, .L15
  89:Core/Src/main.c ****         // Global UART enable if either Tx or Rx enabled.
  90:Core/Src/main.c ****         uart1_cr1_flags |= USART_CR1_UE;
 197              		.loc 1 90 9 is_stmt 1 view .LVU41
 198              	.LVL10:
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 6


  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****         // Enable Transmit mode if required
  93:Core/Src/main.c ****         if(uart_mode & UART_TX_ENABLE) {
 199              		.loc 1 93 9 view .LVU42
 200              		.loc 1 93 11 is_stmt 0 view .LVU43
 201 001a 10F0010F 		tst	r0, #1
 202 001e 0CD0     		beq	.L16
  94:Core/Src/main.c ****             uart1_cr1_flags |= USART_CR1_TE;
 203              		.loc 1 94 13 is_stmt 1 view .LVU44
 204              	.LVL11:
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****             // Configure PA9 as output; 10MHz max; push pull
  97:Core/Src/main.c ****             GPIOA->CRH &= ~(GPIO_CRH_CNF9 | GPIO_CRH_MODE9);
 205              		.loc 1 97 13 view .LVU45
 206              		.loc 1 97 18 is_stmt 0 view .LVU46
 207 0020 A3F54053 		sub	r3, r3, #12288
 208 0024 5968     		ldr	r1, [r3, #4]
 209              		.loc 1 97 24 view .LVU47
 210 0026 21F0F001 		bic	r1, r1, #240
 211 002a 5960     		str	r1, [r3, #4]
  98:Core/Src/main.c ****             GPIOA->CRH |= (GPIO_CRH_MODE9_0 | GPIO_CRH_CNF9_1);
 212              		.loc 1 98 13 is_stmt 1 view .LVU48
 213              		.loc 1 98 18 is_stmt 0 view .LVU49
 214 002c 5968     		ldr	r1, [r3, #4]
 215              		.loc 1 98 24 view .LVU50
 216 002e 41F09001 		orr	r1, r1, #144
 217 0032 5960     		str	r1, [r3, #4]
  94:Core/Src/main.c ****             uart1_cr1_flags |= USART_CR1_TE;
 218              		.loc 1 94 29 view .LVU51
 219 0034 42F20803 		movw	r3, #8200
 220 0038 01E0     		b	.L14
 221              	.LVL12:
 222              	.L16:
  90:Core/Src/main.c **** 
 223              		.loc 1 90 25 view .LVU52
 224 003a 4FF40053 		mov	r3, #8192
 225              	.LVL13:
 226              	.L14:
  99:Core/Src/main.c ****         }
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****         // Enable Receive mode if required
 102:Core/Src/main.c ****         if(uart_mode & UART_RX_ENABLE) {
 227              		.loc 1 102 9 is_stmt 1 view .LVU53
 228              		.loc 1 102 11 is_stmt 0 view .LVU54
 229 003e 12F0020F 		tst	r2, #2
 230 0042 0CD0     		beq	.L13
 103:Core/Src/main.c ****             uart1_cr1_flags |= USART_CR1_RE;
 231              		.loc 1 103 13 is_stmt 1 view .LVU55
 232              		.loc 1 103 29 is_stmt 0 view .LVU56
 233 0044 43F00403 		orr	r3, r3, #4
 234              	.LVL14:
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****             // Configure PA10 input pull-up/pull-down
 106:Core/Src/main.c ****             GPIOA->CRH &= ~(GPIO_CRH_CNF10 | GPIO_CRH_MODE10);
 235              		.loc 1 106 13 is_stmt 1 view .LVU57
 236              		.loc 1 106 18 is_stmt 0 view .LVU58
 237 0048 094A     		ldr	r2, .L17+8
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 7


 238 004a 5168     		ldr	r1, [r2, #4]
 239              		.loc 1 106 24 view .LVU59
 240 004c 21F47061 		bic	r1, r1, #3840
 241 0050 5160     		str	r1, [r2, #4]
 107:Core/Src/main.c ****             GPIOA->CRH |= GPIO_CRH_CNF10_1;
 242              		.loc 1 107 13 is_stmt 1 view .LVU60
 243              		.loc 1 107 18 is_stmt 0 view .LVU61
 244 0052 5168     		ldr	r1, [r2, #4]
 245              		.loc 1 107 24 view .LVU62
 246 0054 41F40061 		orr	r1, r1, #2048
 247 0058 5160     		str	r1, [r2, #4]
 248 005a 00E0     		b	.L13
 249              	.LVL15:
 250              	.L15:
  81:Core/Src/main.c **** 
 251              		.loc 1 81 14 view .LVU63
 252 005c 0023     		movs	r3, #0
 253              	.LVL16:
 254              	.L13:
 108:Core/Src/main.c ****         }
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****     }
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     // Enable UART and required mode
 113:Core/Src/main.c ****     USART1->CR1 |= uart1_cr1_flags;
 255              		.loc 1 113 5 is_stmt 1 view .LVU64
 256              		.loc 1 113 11 is_stmt 0 view .LVU65
 257 005e 034A     		ldr	r2, .L17+4
 258 0060 D168     		ldr	r1, [r2, #12]
 259              		.loc 1 113 17 view .LVU66
 260 0062 0B43     		orrs	r3, r3, r1
 261              	.LVL17:
 262              		.loc 1 113 17 view .LVU67
 263 0064 D360     		str	r3, [r2, #12]
 114:Core/Src/main.c **** }
 264              		.loc 1 114 1 view .LVU68
 265 0066 7047     		bx	lr
 266              	.L18:
 267              		.align	2
 268              	.L17:
 269 0068 00100240 		.word	1073876992
 270 006c 00380140 		.word	1073821696
 271 0070 00080140 		.word	1073809408
 272              		.cfi_endproc
 273              	.LFE70:
 275              		.section	.text.delay,"ax",%progbits
 276              		.align	1
 277              		.global	delay
 278              		.syntax unified
 279              		.thumb
 280              		.thumb_func
 282              	delay:
 283              	.LVL18:
 284              	.LFB71:
 115:Core/Src/main.c **** 
 116:Core/Src/main.c **** void delay(uint32_t ms) {
 285              		.loc 1 116 25 is_stmt 1 view -0
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 8


 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 8
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289              		@ link register save eliminated.
 290              		.loc 1 116 25 is_stmt 0 view .LVU70
 291 0000 82B0     		sub	sp, sp, #8
 292              	.LCFI6:
 293              		.cfi_def_cfa_offset 8
 117:Core/Src/main.c ****     // Simple delay function (not accurate, just for demonstration)
 118:Core/Src/main.c ****     for (volatile uint32_t i = 0; i < ms * 1000; ++i) {
 294              		.loc 1 118 5 is_stmt 1 view .LVU71
 295              	.LBB2:
 296              		.loc 1 118 10 view .LVU72
 297              		.loc 1 118 28 is_stmt 0 view .LVU73
 298 0002 0023     		movs	r3, #0
 299 0004 0193     		str	r3, [sp, #4]
 300              		.loc 1 118 5 view .LVU74
 301 0006 03E0     		b	.L20
 302              	.L21:
 119:Core/Src/main.c ****         __NOP();  // No operation (compiler barrier)
 303              		.loc 1 119 9 is_stmt 1 view .LVU75
 304              		.syntax unified
 305              	@ 119 "Core/Src/main.c" 1
 306 0008 00BF     		nop
 307              	@ 0 "" 2
 118:Core/Src/main.c ****         __NOP();  // No operation (compiler barrier)
 308              		.loc 1 118 50 discriminator 3 view .LVU76
 309              		.thumb
 310              		.syntax unified
 311 000a 019B     		ldr	r3, [sp, #4]
 312 000c 0133     		adds	r3, r3, #1
 313 000e 0193     		str	r3, [sp, #4]
 314              	.L20:
 118:Core/Src/main.c ****         __NOP();  // No operation (compiler barrier)
 315              		.loc 1 118 37 discriminator 1 view .LVU77
 118:Core/Src/main.c ****         __NOP();  // No operation (compiler barrier)
 316              		.loc 1 118 42 is_stmt 0 discriminator 1 view .LVU78
 317 0010 4FF47A73 		mov	r3, #1000
 318 0014 00FB03F3 		mul	r3, r0, r3
 118:Core/Src/main.c ****         __NOP();  // No operation (compiler barrier)
 319              		.loc 1 118 37 discriminator 1 view .LVU79
 320 0018 019A     		ldr	r2, [sp, #4]
 321 001a 9342     		cmp	r3, r2
 322 001c F4D8     		bhi	.L21
 323              	.LBE2:
 120:Core/Src/main.c ****     }
 121:Core/Src/main.c **** }
 324              		.loc 1 121 1 view .LVU80
 325 001e 02B0     		add	sp, sp, #8
 326              	.LCFI7:
 327              		.cfi_def_cfa_offset 0
 328              		@ sp needed
 329 0020 7047     		bx	lr
 330              		.cfi_endproc
 331              	.LFE71:
 333              		.section	.text.turn_led_on,"ax",%progbits
 334              		.align	1
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 9


 335              		.global	turn_led_on
 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	turn_led_on:
 341              	.LVL19:
 342              	.LFB72:
 122:Core/Src/main.c **** 
 123:Core/Src/main.c **** void turn_led_on(LedState_t state) {
 343              		.loc 1 123 36 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 347              		@ link register save eliminated.
 124:Core/Src/main.c ****     if(state == TURN_TOGGLE){
 348              		.loc 1 124 5 view .LVU82
 349              		.loc 1 124 7 is_stmt 0 view .LVU83
 350 0000 0228     		cmp	r0, #2
 351 0002 07D0     		beq	.L27
 125:Core/Src/main.c ****         GPIOC->ODR ^= GPIO_ODR_ODR13;
 126:Core/Src/main.c ****     } else if(state == TURN_ON) {
 352              		.loc 1 126 12 is_stmt 1 view .LVU84
 353              		.loc 1 126 14 is_stmt 0 view .LVU85
 354 0004 0128     		cmp	r0, #1
 355 0006 0BD0     		beq	.L28
 127:Core/Src/main.c ****         GPIOC->ODR &= ~(GPIO_ODR_ODR13);
 128:Core/Src/main.c ****     } else {
 129:Core/Src/main.c ****         GPIOC->ODR |= GPIO_ODR_ODR13;
 356              		.loc 1 129 9 is_stmt 1 view .LVU86
 357              		.loc 1 129 14 is_stmt 0 view .LVU87
 358 0008 084A     		ldr	r2, .L29
 359 000a D368     		ldr	r3, [r2, #12]
 360              		.loc 1 129 20 view .LVU88
 361 000c 43F40053 		orr	r3, r3, #8192
 362 0010 D360     		str	r3, [r2, #12]
 130:Core/Src/main.c ****     }
 131:Core/Src/main.c **** }
 363              		.loc 1 131 1 view .LVU89
 364 0012 7047     		bx	lr
 365              	.L27:
 125:Core/Src/main.c ****     } else if(state == TURN_ON) {
 366              		.loc 1 125 9 is_stmt 1 view .LVU90
 125:Core/Src/main.c ****     } else if(state == TURN_ON) {
 367              		.loc 1 125 14 is_stmt 0 view .LVU91
 368 0014 054A     		ldr	r2, .L29
 369 0016 D368     		ldr	r3, [r2, #12]
 125:Core/Src/main.c ****     } else if(state == TURN_ON) {
 370              		.loc 1 125 20 view .LVU92
 371 0018 83F40053 		eor	r3, r3, #8192
 372 001c D360     		str	r3, [r2, #12]
 373 001e 7047     		bx	lr
 374              	.L28:
 127:Core/Src/main.c ****         GPIOC->ODR &= ~(GPIO_ODR_ODR13);
 375              		.loc 1 127 9 is_stmt 1 view .LVU93
 127:Core/Src/main.c ****         GPIOC->ODR &= ~(GPIO_ODR_ODR13);
 376              		.loc 1 127 14 is_stmt 0 view .LVU94
 377 0020 024A     		ldr	r2, .L29
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 10


 378 0022 D368     		ldr	r3, [r2, #12]
 127:Core/Src/main.c ****         GPIOC->ODR &= ~(GPIO_ODR_ODR13);
 379              		.loc 1 127 20 view .LVU95
 380 0024 23F40053 		bic	r3, r3, #8192
 381 0028 D360     		str	r3, [r2, #12]
 382 002a 7047     		bx	lr
 383              	.L30:
 384              		.align	2
 385              	.L29:
 386 002c 00100140 		.word	1073811456
 387              		.cfi_endproc
 388              	.LFE72:
 390              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 391              		.align	2
 392              	.LC0:
 393 0000 41444331 		.ascii	"ADC1 value = %d;%d;%d\015\012\000"
 393      2076616C 
 393      7565203D 
 393      2025643B 
 393      25643B25 
 394              		.section	.text.main,"ax",%progbits
 395              		.align	1
 396              		.global	main
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 401              	main:
 402              	.LFB73:
 132:Core/Src/main.c **** 
 133:Core/Src/main.c **** /**
 134:Core/Src/main.c ****   * @brief  The application entry point.
 135:Core/Src/main.c ****   * @retval int
 136:Core/Src/main.c ****   */
 137:Core/Src/main.c **** //	adc_init(adc1, PA, 0);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** 
 140:Core/Src/main.c **** int main(void)
 141:Core/Src/main.c **** {
 403              		.loc 1 141 1 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 10B5     		push	{r4, lr}
 408              	.LCFI8:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 4, -8
 411              		.cfi_offset 14, -4
 142:Core/Src/main.c ****     uint16_t adcDelay1 = 0xFFF;
 412              		.loc 1 142 5 view .LVU97
 413              	.LVL20:
 143:Core/Src/main.c ****     uint16_t adcDelay2 = 0xFFF;
 414              		.loc 1 143 5 view .LVU98
 144:Core/Src/main.c ****     uint16_t adcDelay3 = 0xFFF;
 415              		.loc 1 144 5 view .LVU99
 145:Core/Src/main.c **** 
 146:Core/Src/main.c ****     uart1_setup(UART_TX_ENABLE);
 416              		.loc 1 146 5 view .LVU100
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 11


 417 0002 0120     		movs	r0, #1
 418 0004 FFF7FEFF 		bl	uart1_setup
 419              	.LVL21:
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****     // Enable clock for GPIOA, GPIOC & ADC1 peripheral
 149:Core/Src/main.c ****     RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;
 420              		.loc 1 149 5 view .LVU101
 421              		.loc 1 149 8 is_stmt 0 view .LVU102
 422 0008 314B     		ldr	r3, .L38
 423 000a 9A69     		ldr	r2, [r3, #24]
 424              		.loc 1 149 18 view .LVU103
 425 000c 42F01002 		orr	r2, r2, #16
 426 0010 9A61     		str	r2, [r3, #24]
 150:Core/Src/main.c ****     RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;
 427              		.loc 1 150 5 is_stmt 1 view .LVU104
 428              		.loc 1 150 8 is_stmt 0 view .LVU105
 429 0012 9A69     		ldr	r2, [r3, #24]
 430              		.loc 1 150 18 view .LVU106
 431 0014 42F00402 		orr	r2, r2, #4
 432 0018 9A61     		str	r2, [r3, #24]
 151:Core/Src/main.c ****     RCC->APB2ENR |= RCC_APB2ENR_ADC1EN;
 433              		.loc 1 151 5 is_stmt 1 view .LVU107
 434              		.loc 1 151 8 is_stmt 0 view .LVU108
 435 001a 9A69     		ldr	r2, [r3, #24]
 436              		.loc 1 151 18 view .LVU109
 437 001c 42F40072 		orr	r2, r2, #512
 438 0020 9A61     		str	r2, [r3, #24]
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     // Configure built in LED as output
 154:Core/Src/main.c ****     GPIOC->CRH &= ~(GPIO_CRH_CNF13 | GPIO_CRH_MODE13);
 439              		.loc 1 154 5 is_stmt 1 view .LVU110
 440              		.loc 1 154 10 is_stmt 0 view .LVU111
 441 0022 A3F58033 		sub	r3, r3, #65536
 442 0026 5A68     		ldr	r2, [r3, #4]
 443              		.loc 1 154 16 view .LVU112
 444 0028 22F47002 		bic	r2, r2, #15728640
 445 002c 5A60     		str	r2, [r3, #4]
 155:Core/Src/main.c ****     GPIOC->CRH |= GPIO_CRH_MODE13_0;
 446              		.loc 1 155 5 is_stmt 1 view .LVU113
 447              		.loc 1 155 10 is_stmt 0 view .LVU114
 448 002e 5A68     		ldr	r2, [r3, #4]
 449              		.loc 1 155 16 view .LVU115
 450 0030 42F48012 		orr	r2, r2, #1048576
 451 0034 5A60     		str	r2, [r3, #4]
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****     // GPIOA1 analog input mode
 158:Core/Src/main.c ****     GPIOA->CRL &= ~(GPIO_CRL_CNF1 | GPIO_CRL_MODE1);
 452              		.loc 1 158 5 is_stmt 1 view .LVU116
 453              		.loc 1 158 10 is_stmt 0 view .LVU117
 454 0036 274A     		ldr	r2, .L38+4
 455 0038 1368     		ldr	r3, [r2]
 456              		.loc 1 158 16 view .LVU118
 457 003a 23F0F003 		bic	r3, r3, #240
 458 003e 1360     		str	r3, [r2]
 159:Core/Src/main.c **** 
 160:Core/Src/main.c ****     // Caliberate ADC after each power up
 161:Core/Src/main.c ****     ADC1->CR2 |= ADC_CR2_ADON;
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 12


 459              		.loc 1 161 5 is_stmt 1 view .LVU119
 460              		.loc 1 161 9 is_stmt 0 view .LVU120
 461 0040 254C     		ldr	r4, .L38+8
 462 0042 A368     		ldr	r3, [r4, #8]
 463              		.loc 1 161 15 view .LVU121
 464 0044 43F00103 		orr	r3, r3, #1
 465 0048 A360     		str	r3, [r4, #8]
 162:Core/Src/main.c ****     delay(100);
 466              		.loc 1 162 5 is_stmt 1 view .LVU122
 467 004a 6420     		movs	r0, #100
 468 004c FFF7FEFF 		bl	delay
 469              	.LVL22:
 163:Core/Src/main.c ****     ADC1->CR2 |= ADC_CR2_ADON;
 470              		.loc 1 163 5 view .LVU123
 471              		.loc 1 163 9 is_stmt 0 view .LVU124
 472 0050 A368     		ldr	r3, [r4, #8]
 473              		.loc 1 163 15 view .LVU125
 474 0052 43F00103 		orr	r3, r3, #1
 475 0056 A360     		str	r3, [r4, #8]
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     ADC1->CR2 |= ADC_CR2_CAL;
 476              		.loc 1 165 5 is_stmt 1 view .LVU126
 477              		.loc 1 165 9 is_stmt 0 view .LVU127
 478 0058 A368     		ldr	r3, [r4, #8]
 479              		.loc 1 165 15 view .LVU128
 480 005a 43F00403 		orr	r3, r3, #4
 481 005e A360     		str	r3, [r4, #8]
 166:Core/Src/main.c ****     while(ADC1->CR2 & ADC_CR2_CAL);
 482              		.loc 1 166 5 is_stmt 1 view .LVU129
 483              	.L32:
 484              		.loc 1 166 11 discriminator 1 view .LVU130
 485              		.loc 1 166 15 is_stmt 0 discriminator 1 view .LVU131
 486 0060 1D4B     		ldr	r3, .L38+8
 487 0062 9B68     		ldr	r3, [r3, #8]
 488              		.loc 1 166 11 discriminator 1 view .LVU132
 489 0064 13F0040F 		tst	r3, #4
 490 0068 FAD1     		bne	.L32
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****     // Turn LED off
 169:Core/Src/main.c ****     TOGGLE_LED();
 491              		.loc 1 169 5 is_stmt 1 view .LVU133
 492 006a 0220     		movs	r0, #2
 493 006c FFF7FEFF 		bl	turn_led_on
 494              	.LVL23:
 495              	.L36:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****     while (1) {
 496              		.loc 1 171 5 view .LVU134
 172:Core/Src/main.c ****         ADC1->SQR3 = 1;
 497              		.loc 1 172 9 view .LVU135
 498              		.loc 1 172 20 is_stmt 0 view .LVU136
 499 0070 194B     		ldr	r3, .L38+8
 500 0072 0122     		movs	r2, #1
 501 0074 5A63     		str	r2, [r3, #52]
 173:Core/Src/main.c ****         ADC1->CR2 |= ADC_CR2_ADON;
 502              		.loc 1 173 9 is_stmt 1 view .LVU137
 503              		.loc 1 173 13 is_stmt 0 view .LVU138
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 13


 504 0076 9A68     		ldr	r2, [r3, #8]
 505              		.loc 1 173 19 view .LVU139
 506 0078 42F00102 		orr	r2, r2, #1
 507 007c 9A60     		str	r2, [r3, #8]
 174:Core/Src/main.c ****         while(!(ADC1->SR & ADC_SR_EOC));
 508              		.loc 1 174 9 is_stmt 1 view .LVU140
 509              	.L33:
 510              		.loc 1 174 15 discriminator 1 view .LVU141
 511              		.loc 1 174 21 is_stmt 0 discriminator 1 view .LVU142
 512 007e 164B     		ldr	r3, .L38+8
 513 0080 1B68     		ldr	r3, [r3]
 514              		.loc 1 174 15 discriminator 1 view .LVU143
 515 0082 13F0020F 		tst	r3, #2
 516 0086 FAD0     		beq	.L33
 175:Core/Src/main.c ****         adcDelay1 = ADC1->DR;
 517              		.loc 1 175 9 is_stmt 1 view .LVU144
 518              		.loc 1 175 25 is_stmt 0 view .LVU145
 519 0088 134B     		ldr	r3, .L38+8
 520 008a D96C     		ldr	r1, [r3, #76]
 521              	.LVL24:
 176:Core/Src/main.c **** 
 177:Core/Src/main.c ****         ADC1->SQR3 = 2;
 522              		.loc 1 177 9 is_stmt 1 view .LVU146
 523              		.loc 1 177 20 is_stmt 0 view .LVU147
 524 008c 0222     		movs	r2, #2
 525 008e 5A63     		str	r2, [r3, #52]
 178:Core/Src/main.c ****         ADC1->CR2 |= ADC_CR2_ADON;
 526              		.loc 1 178 9 is_stmt 1 view .LVU148
 527              		.loc 1 178 13 is_stmt 0 view .LVU149
 528 0090 9A68     		ldr	r2, [r3, #8]
 529              		.loc 1 178 19 view .LVU150
 530 0092 42F00102 		orr	r2, r2, #1
 531 0096 9A60     		str	r2, [r3, #8]
 179:Core/Src/main.c ****         while(!(ADC1->SR & ADC_SR_EOC));
 532              		.loc 1 179 9 is_stmt 1 view .LVU151
 533              	.L34:
 534              		.loc 1 179 15 discriminator 1 view .LVU152
 535              		.loc 1 179 21 is_stmt 0 discriminator 1 view .LVU153
 536 0098 0F4B     		ldr	r3, .L38+8
 537 009a 1B68     		ldr	r3, [r3]
 538              		.loc 1 179 15 discriminator 1 view .LVU154
 539 009c 13F0020F 		tst	r3, #2
 540 00a0 FAD0     		beq	.L34
 180:Core/Src/main.c ****         adcDelay2 = ADC1->DR;
 541              		.loc 1 180 9 is_stmt 1 view .LVU155
 542              		.loc 1 180 25 is_stmt 0 view .LVU156
 543 00a2 0D4B     		ldr	r3, .L38+8
 544 00a4 DA6C     		ldr	r2, [r3, #76]
 545              	.LVL25:
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****         ADC1->SQR3 = 3;
 546              		.loc 1 182 9 is_stmt 1 view .LVU157
 547              		.loc 1 182 20 is_stmt 0 view .LVU158
 548 00a6 0320     		movs	r0, #3
 549 00a8 5863     		str	r0, [r3, #52]
 183:Core/Src/main.c ****         ADC1->CR2 |= ADC_CR2_ADON;
 550              		.loc 1 183 9 is_stmt 1 view .LVU159
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 14


 551              		.loc 1 183 13 is_stmt 0 view .LVU160
 552 00aa 9868     		ldr	r0, [r3, #8]
 553              		.loc 1 183 19 view .LVU161
 554 00ac 40F00100 		orr	r0, r0, #1
 555 00b0 9860     		str	r0, [r3, #8]
 184:Core/Src/main.c ****         while(!(ADC1->SR & ADC_SR_EOC));
 556              		.loc 1 184 9 is_stmt 1 view .LVU162
 557              	.L35:
 558              		.loc 1 184 15 discriminator 1 view .LVU163
 559              		.loc 1 184 21 is_stmt 0 discriminator 1 view .LVU164
 560 00b2 094B     		ldr	r3, .L38+8
 561 00b4 1B68     		ldr	r3, [r3]
 562              		.loc 1 184 15 discriminator 1 view .LVU165
 563 00b6 13F0020F 		tst	r3, #2
 564 00ba FAD0     		beq	.L35
 185:Core/Src/main.c ****         adcDelay3 = ADC1->DR;
 565              		.loc 1 185 9 is_stmt 1 view .LVU166
 566              		.loc 1 185 25 is_stmt 0 view .LVU167
 567 00bc 064B     		ldr	r3, .L38+8
 568 00be DB6C     		ldr	r3, [r3, #76]
 569              	.LVL26:
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****         uart1_send_string("ADC1 value = %d;%d;%d\r\n", adcDelay1, adcDelay2, adcDelay3);
 570              		.loc 1 187 9 is_stmt 1 view .LVU168
 571 00c0 9BB2     		uxth	r3, r3
 572              		.loc 1 187 9 is_stmt 0 view .LVU169
 573 00c2 92B2     		uxth	r2, r2
 574              		.loc 1 187 9 view .LVU170
 575 00c4 89B2     		uxth	r1, r1
 576              		.loc 1 187 9 view .LVU171
 577 00c6 0548     		ldr	r0, .L38+12
 578 00c8 FFF7FEFF 		bl	uart1_send_string
 579              	.LVL27:
 171:Core/Src/main.c ****         ADC1->SQR3 = 1;
 580              		.loc 1 171 11 is_stmt 1 view .LVU172
 172:Core/Src/main.c ****         ADC1->CR2 |= ADC_CR2_ADON;
 581              		.loc 1 172 20 is_stmt 0 view .LVU173
 582 00cc D0E7     		b	.L36
 583              	.L39:
 584 00ce 00BF     		.align	2
 585              	.L38:
 586 00d0 00100240 		.word	1073876992
 587 00d4 00080140 		.word	1073809408
 588 00d8 00240140 		.word	1073816576
 589 00dc 00000000 		.word	.LC0
 590              		.cfi_endproc
 591              	.LFE73:
 593              		.text
 594              	.Letext0:
 595              		.file 2 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/machine/_defa
 596              		.file 3 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/sys/_stdint.h
 597              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103x6.h"
 598              		.file 5 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.2.1/includ
 599              		.file 6 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/lib/gcc/arm-none-eabi/13.2.1/includ
 600              		.file 7 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/string.h"
 601              		.file 8 "/Applications/ArmGNUToolchain/13.2.Rel1/arm-none-eabi/arm-none-eabi/include/stdio.h"
 602              		.file 9 "<built-in>"
ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 15


ARM GAS  /var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:19     .text.uart1_send_byte:00000000 $t
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:25     .text.uart1_send_byte:00000000 uart1_send_byte
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:51     .text.uart1_send_byte:00000010 $d
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:56     .text.uart1_send_string:00000000 $t
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:62     .text.uart1_send_string:00000000 uart1_send_string
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:160    .text.uart1_send_string:00000048 $d
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:165    .text.uart1_setup:00000000 $t
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:171    .text.uart1_setup:00000000 uart1_setup
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:269    .text.uart1_setup:00000068 $d
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:276    .text.delay:00000000 $t
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:282    .text.delay:00000000 delay
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:334    .text.turn_led_on:00000000 $t
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:340    .text.turn_led_on:00000000 turn_led_on
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:386    .text.turn_led_on:0000002c $d
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:391    .rodata.main.str1.4:00000000 $d
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:395    .text.main:00000000 $t
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:401    .text.main:00000000 main
/var/folders/0s/qdwkb5c14yg4kdxmxwmgd__80000gn/T//cc36nw7H.s:586    .text.main:000000d0 $d

UNDEFINED SYMBOLS
vsprintf
strlen
